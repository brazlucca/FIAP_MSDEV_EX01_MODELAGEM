openapi: 3.0.3
info:
  title: Swagger Retail Value Chain - OpenAPI 3.0
  description: |-
    This is a Retail Value Chain Swagger based on the OpenAPI 3.0 specification.  
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://retailvaluechain/api/v1
tags:
  - name: sales
    description: Everything about Sale
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: retailer
    description: Everything about Retailer
    externalDocs:
      description: Find out more
      url: http://swagger.io    
  - name: retailer-inventory
    description: Everything about Retailer Inventory
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: shipment-order
    description: Everything about Shipment Order
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: warehouse
    description: Everything about Warehouse
    externalDocs:
      description: Find out more
      url: http://swagger.io       
  - name: warehouse-inventory
    description: Everything about Warehouse Inventory
    externalDocs:
      description: Find out more
      url: http://swagger.io      
  - name: carrier
    description: Everything about Carrier
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: product
    description: Everything about Product
    externalDocs:
      description: Find out more
      url: http://swagger.io  
  - name: supplier
    description: Everything about Supplier
    externalDocs:
      description: Find out more
      url: http://swagger.io  
paths:
  /sales:
    post:
      tags:
        - sales
      summary: Create sale
      description: Create a new sale
      operationId: createSale
      requestBody:
        description: Create a sale
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSalesData'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesData'          
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc
  /retailer:
    post:
      tags:
        - retailer
      summary: Create retailer
      description: Create a new retailer
      operationId: createRetailer
      requestBody:
        description: Create a new retailer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRetailer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Retailer'          
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc          
  /retailer/{retailerId}:
    put:
      tags:
        - retailer
      summary: Update retailer
      description: This can only be done by the logged in user.
      operationId: updateRetailer
      parameters:
        - name: retailerId
          in: path
          description: id to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent retailer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRetailer'
        required: true      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Retailer'
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv    
    get:
      tags:
        - retailer
      summary: Get retailer
      description: This can only be done by the logged in user.
      operationId: getRetailer
      parameters:
        - name: retailerId
          in: path
          description: id to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Retailer'
        '404':
          description: Not Found
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv    
    delete:
      tags:
        - retailer
      summary: Delete retailer
      description: This can only be done by the logged in user.
      operationId: deleteRetailer
      parameters:
        - name: retailerId
          in: path
          description: id to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv    
  /retailer-inventory:
    post:
      tags:
        - retailer-inventory
      summary: Create Retailer Inventory
      description: Create a new sale
      operationId: createRetailerInventory
      requestBody:
        description: Create a sale
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRetailerInventory'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetailerInventory'          
        '405':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc  
  /shipment-order:
    post:
      tags:
        - shipment-order
      summary: Create Shipment Order
      description: Create a Create a Shipment Order
      operationId: createShipmentOrder
      requestBody:
        description: Create a Shipment Order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShipmentOrder'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentOrder'          
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc  
  /shipment-order/{shipmentOrderId}:
    get:
      tags:
        - shipment-order
      summary: Get Shipment Order
      description: This can only be done by the logged in user.
      operationId: getShipmentOrder
      parameters:
        - name: shipmentOrderId
          in: path
          description: id to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentOrder'
        '404':
          description: Not Found        
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc          
    put:
      tags:
        - shipment-order
      summary: Update Shipment Order
      description: This can only be done by the logged in user.
      operationId: updateShipmentOrder
      parameters:
        - name: shipmentOrderId
          in: path
          description: id to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Retailer inventory
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentOrder'
        required: true      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipmentOrder'
        '400':
          description: Invalid input      
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc                  
  /warehouse:
    post:
      tags:
        - warehouse
      summary: Create Warehouse
      description: Create a Warehouse
      operationId: createWarehouse
      requestBody:
        description: Create a Warehouse
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarehouse'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'          
        '405':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc  
  /warehouse/{warehouseId}:
    put:
      tags:
        - warehouse
      summary: Update Warehouse
      description: This can only be done by the logged in user.
      operationId: updateWarehouse
      parameters:
        - name: warehouseId
          in: path
          description: id to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent WarehouseId inventory
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWarehouse'
        required: true      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv    
    get:
      tags:
        - warehouse
      summary: Get Warehouse
      description: This can only be done by the logged in user.
      operationId: getWarehouse
      parameters:
        - name: warehouseId
          in: path
          description: id to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'
        '404':
          description: Not Found
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc   
    delete:
      tags:
        - warehouse
      summary: Delete Warehouse
      description: This can only be done by the logged in user.
      operationId: deleteWarehouse
      parameters:
        - name: warehouseId
          in: path
          description: id to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv      
  /warehouse-inventory:
    post:
      tags:
        - warehouse-inventory
      summary: Create a Warehouse Inventory
      description: Create a Warehouse Inventory
      operationId: createWarehouseInventory
      requestBody:
        description: Create a Warehouse Inventory
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWarehouseInventory'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WarehouseInventory'          
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc  
  /carrier:
    post:
      tags:
        - carrier
      summary: Create Carrier
      description: Create a Carrier
      operationId: createCarrier
      requestBody:
        description: Create a Carrier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCarrier'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'          
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc  
  /carrier/{carrierId}:
    put:
      tags:
        - carrier
      summary: Update Carrier
      description: This can only be done by the logged in user.
      operationId: updateCarrier
      parameters:
        - name: carrierId
          in: path
          description: id to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Warehouse Inventory
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCarrier'
        required: true      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv    
    get:
      tags:
        - carrier
      summary: Get Carrier
      description: This can only be done by the logged in user.
      operationId: getCarrier
      parameters:
        - name: carrierId
          in: path
          description: id to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrier'
        '404':
          description: Not Found
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc   
    delete:
      tags:
        - carrier
      summary: Delete Carrier
      description: This can only be done by the logged in user.
      operationId: deleteCarrier
      parameters:
        - name: carrierId
          in: path
          description: id to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv      
  /supplier:
    post:
      tags:
        - supplier
      summary: Create a Supplier
      description: Create a Supplier
      operationId: createSupplier
      requestBody:
        description: Create a Supplier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSupplier'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'          
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc  
  /supplier/{supplierId}:
    put:
      tags:
        - supplier
      summary: Update Supplier
      description: This can only be done by the logged in user.
      operationId: updateSupplier
      parameters:
        - name: supplierId
          in: path
          description: id to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Supplier
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSupplier'
        required: true      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv    
    get:
      tags:
        - supplier
      summary: Get Supplier
      description: This can only be done by the logged in user.
      operationId: getSupplier
      parameters:
        - name: supplierId
          in: path
          description: id to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
        '404':
          description: Not Found
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc   
    delete:
      tags:
        - supplier
      summary: Delete Supplier
      description: This can only be done by the logged in user.
      operationId: deleteSupplier
      parameters:
        - name: supplierId
          in: path
          description: id to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv      
  /product:
    post:
      tags:
        - product
      summary: Create Product
      description: Create a Product
      operationId: createProduct
      requestBody:
        description: Create a Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProduct'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc  
  /product/{productId}:
    put:
      tags:
        - product
      summary: Update Product
      description: This can only be done by the logged in user.
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          description: id to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProduct'
        required: true      
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv    
    get:
      tags:
        - product
      summary: Get Product
      description: This can only be done by the logged in user.
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          description: id to get
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Not Found
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtvc   
    delete:
      tags:
        - product
      summary: Delete Product
      description: This can only be done by the logged in user.
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: id to delete
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful operation
      security:
        - retailvaluechain_auth:
            - write:rtvc
            - read:rtv      
components:
  schemas:
    CreateAddress:
      required:
        - zipcode
        - country
        - city
        - neighborhood
        - street
        - number
      type: object
      properties:
        zipcode:
          type: string
          example: '123456-78'
        country:
          type: string
          example: Brazil
        city:
          type: string
          example: 'São Paulo'
        neighborhood:
          type: string
          example: 'Jadrins'
        street:
          type: string
          example: 'Avenida Paulista'
        number:
          type: integer
          format: int32
          example: 1000
    UpdateAddress:
      type: object
      properties:
        zipcode:
          type: string
          example: '123456-78'
        country:
          type: string
          example: Brazil
        city:
          type: string
          example: 'São Paulo'
        neighborhood:
          type: string
          example: 'Jadrins'
        street:
          type: string
          example: 'Avenida Paulista'
        number:
          type: integer
          format: int32
          example: 1000      
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        zipcode:
          type: string
          example: '123456-78'
        country:
          type: string
          example: Brazil
        city:
          type: string
          example: 'São Paulo'
        neighborhood:
          type: string
          example: 'Jadrins'
        street:
          type: string
          example: 'Avenida Paulista'
        number:
          type: integer
          format: int32
          example: 1000 
      xml:
        name: address
    CreateCarrier:
      required:
        - description
      type: object
      properties:
        description:
          type: string
          example: 'Description'
    UpdateCarrier:
      type: object
      properties:
        description:
          type: string
          example: 'Description'      
    Carrier:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        description:
          type: string
          example: 'Description'
    CreateProduct:
      required:
        - supplierId 
        - description
        - price
      type: object
      properties:
        supplierId:
          type: integer
          format: int64
          example: 123456  
        description:
          type: string
          example: 'Description'
        price:
          type: number
          format: double
          example: '10.01'
    UpdateProduct:
      type: object
      properties:
        supplierId:
          type: integer
          format: int64
          example: 123456  
        description:
          type: string
          example: 'Description'
        price:
          type: number
          format: double
          example: '10.01'      
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        supplierId:
          type: integer
          format: int64
          example: 123456  
        description:
          type: string
          example: 'Description'
        price:
          type: number
          format: double
          example: '10.01'
    CreateRetailer:
      required:
        - description
        - address
      type: object
      properties:
        description:
          type: string
          example: '123456'
        address:
          $ref: '#/components/schemas/CreateAddress'
    UpdateRetailer:
      type: object
      properties:
        description:
          type: string
          example: '123456'
        address:
          $ref: '#/components/schemas/UpdateAddress'      
    Retailer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        description:
          type: string
          example: '123456'
        address:
          $ref: '#/components/schemas/Address' 
    CreateRetailerInventory:
      required:
        - retailerId
        - productId
        - quantity
      type: object
      properties:
        retailerId:
          type: integer
          format: int64
          example: 123456
        productId:
          type: integer
          format: int64
          example: 123456
        quantity:
          type: integer
          format: int32
          example: 123456      
    RetailerInventory:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        retailerId:
          type: integer
          format: int64
          example: 123456
        productId:
          type: integer
          format: int64
          example: 123456
        quantity:
          type: integer
          format: int32
          example: 123456
    CreateSalesData:
      required:
        - clientId
        - salesPrice
        - salesDate
        - items
      type: object
      properties:
        clientId:
          type: integer
          format: int64
          example: 123456
        salesPrice:
          type: number
          format: double
          example: '10.01'  
        salesDate:
          type: string
          description: RFC3339 Datetime to set
          format: date-time
          example: "2022-10-20T12:30:30+00:00"
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateSalesDataItem'      
    SalesData:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        clientId:
          type: integer
          format: int64
          example: 123456
        salesPrice:
          type: number
          format: double
          example: '10.01'  
        salesDate:
          type: string
          description: RFC3339 Datetime to set
          format: date-time
          example: "2022-10-20T12:30:30+00:00"
        items:
          type: array
          items:
            $ref: '#/components/schemas/SalesDataItem'  
    CreateSalesDataItem:
      required:
        - productId
        - quantity
        - price
      type: object
      properties:
        productId:
          type: integer
          format: int64
          example: 123456
        quantity:
          type: integer
          format: int32
          example: 123456
        price:
          type: number
          format: double
          example: '10.01'        
    SalesDataItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        productId:
          type: integer
          format: int64
          example: 123456
        quantity:
          type: integer
          format: int32
          example: 123456
        price:
          type: number
          format: double
          example: '10.01'
    CreateShipmentOrder:
      required:
      - type
      - carrierId
      - retailerId
      - warehouseId
      - senderAddress
      - recipientAddress
      - status
      - items
      type: object
      properties:
        type:
          type: string
          enum:
            - WAREHOUSE
            - RETAILER
          example: WAREHOUSE
        carrierId:
          type: integer
          format: int64
          example: 123456
        retailerId:
          type: integer
          format: int64
          example: 123456
        warehouseId:
          type: integer
          format: int64
          example: 123456
        senderAddress:
          $ref: '#/components/schemas/CreateAddress'
        recipientAddress:
          $ref: '#/components/schemas/CreateAddress'  
        status:
          type: string
          enum:
            - PROCESSING
            - DELIVERED
            - CANCELED
          example: PROCESSING
        items:
          type: array
          items:
            $ref: '#/components/schemas/CreateShipmentOrderItem'
    ShipmentOrder:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        type:
          type: string
          enum:
            - WAREHOUSE
            - RETAILER
          example: WAREHOUSE
        carrierId:
          type: integer
          format: int64
          example: 123456
        retailerId:
          type: integer
          format: int64
          example: 123456
        warehouseId:
          type: integer
          format: int64
          example: 123456
        senderAddress:
          $ref: '#/components/schemas/Address'
        recipientAddress:
          $ref: '#/components/schemas/Address'  
        status:
          type: string
          enum:
            - PROCESSING
            - DELIVERED
            - CANCELED
          example: PROCESSING
        items:
          type: array
          items:
            $ref: '#/components/schemas/ShipmentOrderItem'
    UpdateShipmentOrder:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - PROCESSING
            - DELIVERED
            - CANCELED
          example: PROCESSING
    CreateShipmentOrderItem:
      required:
        - purchaseOrderItemId
      type: object
      properties:
        purchaseOrderItemId:
          type: integer
          format: int64
          example: 123456      
    ShipmentOrderItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        purchaseOrderItemId:
          type: integer
          format: int64
          example: 123456
    CreateSupplier:
      required:
        - description
      type: object
      properties:
        description:
          type: string
          example: 'description'      
    UpdateSupplier:
      type: object
      properties:
        description:
          type: string
          example: 'description'      
    Supplier:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        description:
          type: string
          example: 'description'
    CreateWarehouse:
      required:
      - description
      - address
      type: object
      properties:
        description:
          type: string
          example: 'description'
        address:
          $ref: '#/components/schemas/CreateAddress'
    UpdateWarehouse:
      type: object
      properties:
        description:
          type: string
          example: 'description'
        address:
          $ref: '#/components/schemas/UpdateAddress'      
    Warehouse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        description:
          type: string
          example: 'description'
        address:
          $ref: '#/components/schemas/Address'
    CreateWarehouseInventory:
      required:
        - warehouseId
        - productId
        - quantity
      type: object
      properties:
        warehouseId:
          type: integer
          format: int64
          example: 123456
        productId:
          type: integer
          format: int64
          example: 123456
        quantity:
          type: integer
          format: int32
          example: 123456      
    WarehouseInventory:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 123456
        warehouseId:
          type: integer
          format: int64
          example: 123456
        productId:
          type: integer
          format: int64
          example: 123456
        quantity:
          type: integer
          format: int32
          example: 123456  
  securitySchemes:
    retailvaluechain_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://retailvaluechain.swagger.io/oauth/authorize
          scopes:
            write:rtvc: modify retail value chain in your account
            read:rtvc: read your retail value chain
    api_key:
      type: apiKey
      name: api_key
      in: header